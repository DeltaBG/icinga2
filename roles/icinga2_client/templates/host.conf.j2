object Endpoint "{{ inventory_hostname }}" {
        host = "{{ ansible_host }}"
}

object Zone "{{ inventory_hostname }}" {
        endpoints = [ "{{ inventory_hostname }}" ]
        parent = "{{ icinga2_zone_master_endpoint_name }}"
}

object Host "{{ inventory_hostname }}" {
  import "generic-host"
  name = "{{ inventory_hostname }}"
  vars.agent_endpoint = name
  vars.client_endpoint = "{{ inventory_hostname }}"
  address = "{{ ansible_host }}"
  vars.os = "{{ ansible_system }}"
  vars.os_family = "{{ ansible_distribution }}"

  # IOstats plugin
  {% if ansible_devices.keys()|list is defined and ansible_devices.keys()|list|length>0 %}
    {% for disk in ansible_devices.keys()|list %}
      {% if "sr" not in disk %}

          vars.iostats_disks["iostat on {{ disk }}"] = {
            iostats_disk = "{{ disk }}"
        }
      {% endif %}     
    {% endfor %}
  {% endif %}

  # Disks plugin
  {% if ansible_facts.mounts is defined and ansible_facts.mounts|length>0 %}

    {% for mount in ansible_facts.mounts %}
      {% if 'snap' not in mount.mount %}
      vars.disk_service["disk {{ mount.mount }}"] = {
        disk_partitions = "{{ mount.mount }}"
      }
      {% endif %}

    {% endfor %}
  {% endif %}

  # Swap plugin
  {% if ansible_facts.swaptotal_mb is defined and ansible_facts.swaptotal_mb>0 %}

    vars.swap_enabled = true
  {% else %}
    vars.swap_enabled = false
  {% endif %}

  # Load plugin
  {% if ansible_facts.processor_vcpus is defined %}

    vars.load_wload1 = {{ (ansible_facts.processor_vcpus * 1.5)|int }}
    vars.load_wload5 = {{ (ansible_facts.processor_vcpus * 1.4)|int }}
    vars.load_wload15 = {{ (ansible_facts.processor_vcpus * 1.3)|int }}
    vars.load_cload1 = {{ (ansible_facts.processor_vcpus * 2)|int }}
    vars.load_cload5 = {{ (ansible_facts.processor_vcpus * 1.9)|int }}
    vars.load_cload15 = {{ (ansible_facts.processor_vcpus * 1.8)|int }}
  {% endif %}

  # Smartctl plugin
  {% if ansible_facts.smartctl is defined and ansible_facts.smartctl|length>0 %}

    {% for device in ansible_facts.smartctl.devices %}
        vars.smart_devices["smart_device {{ device.name }}"] = {
          smart_device = "{{ device.device }}"
          smart_type = "{{ device.type }}"
        }

    {% endfor %}
  {% endif %}

  # RAID plugin
  {% if ansible_facts.raid is defined and ansible_facts.raid|length>0 %}
    vars.raid_enabled = true
  {% endif %}

  # RBL plugin
  {% if ansible_facts.all_ipv4_addresses is defined and ansible_facts.all_ipv4_addresses|length>0 %}

    {% for ip in ansible_facts.all_ipv4_addresses|ansible.netcommon.ipaddr('public') %}
      vars.rbl_hostnames["RBL check for {{ ip }}"] = {
        rbl_hostname = "{{ ip }}"
        rbl_server = ["sbl.spamhaus.org", "xbl.spamhaus.org", "zen.spamhaus.org", "dun.dnsrbl.net", "bl.spamcop.net"]
      }

    {% endfor %}
  {% endif %}

  # MySQL plugin
  {% if ansible_facts.mysql is defined and ansible_facts.mysql|length>0 %}

      {% if icinga2_mysql_monitoring_user is defined %}vars.mysql_username = "{{ icinga2_mysql_monitoring_user }}"
      {% endif %}
      vars.mysql_hostname = "localhost"
      {% if icinga2_mysql_monitoring_password is defined %}vars.mysql_password = "{{ icinga2_mysql_monitoring_password }}"
      {% endif %}
      {% if icinga2_mysql_monitoring_user is defined %}vars.mysql_health_username = "{{ icinga2_mysql_monitoring_user }}"
      {% endif %}
      vars.mysql_health_hostname = "localhost"
      {% if icinga2_mysql_monitoring_password is defined%}vars.mysql_health_password = "{{ icinga2_mysql_monitoring_password }}"
      {% endif %}
  {% endif %}

  # mem plugin
  {% if ansible_memory_mb is defined and ansible_memory_mb.real.total|int > 0 %}
    vars.mem_warn = 85
    vars.mem_crit = 95
    vars.mem_command = "memory"
  {% endif %}
  # cpu plugin
  {% if ansible_facts.processor_vcpus is defined %}
    vars.cpu_warn = 85
    vars.cpu_crit = 95
    vars.cpu_command = "cpu"
  {% endif %}

  # Custom client vars. Should be defined only in host_vars.
  # This block should sit below every other plugin blocks,
  # otherwises the overriding will not work.
  {% if icinga2_custom_vars is defined %}
  {{ icinga2_custom_vars }}
  {% endif %}
  # End custom client vars.
}
